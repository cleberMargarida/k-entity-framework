name: .NET Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for Nerdbank.GitVersioning

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

  unit-tests:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run Unit Tests
      run: dotnet test tests/K.EntityFrameworkCore.UnitTests/ --collect:"XPlat Code Coverage" --results-directory coverage/unit

    - name: Unit Test Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/unit/**/*.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'
        tag: 'unit-tests'

    - name: Upload Unit Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-coverage
        path: coverage/unit/

  integration-tests:
    name: Integration Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run Integration Tests
      run: dotnet test tests/K.EntityFrameworkCore.IntegrationTests/ --collect:"XPlat Code Coverage" --results-directory coverage/integration

    - name: Integration Test Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/integration/**/*.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'
        tag: 'integration-tests'

    - name: Upload Integration Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-coverage
        path: coverage/integration/

  test-summary:
    name: Test Summary
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Download Unit Test Coverage
      uses: actions/download-artifact@v4
      with:
        name: unit-test-coverage
        path: coverage/unit/

    - name: Download Integration Test Coverage
      uses: actions/download-artifact@v4
      with:
        name: integration-test-coverage
        path: coverage/integration/

    - name: Combined Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coverage/**/*.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ github.event_name == 'pull_request' }}
      with:
        recreate: true
        path: code-coverage-results.md
    
  publish:
    name: Publish to NuGet
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Nerdbank.GitVersioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Install Nerdbank.GitVersioning Tool
        run: dotnet tool install --global nbgv

      - name: Restore Nerdbank.GitVersioning Version Info
        run: nbgv get-version --format json > version.json

      - name: Extract Version Number
        id: get_version
        run: echo "version=$(jq -r '.CloudBuildVersionVars.NuGetPackageVersion' version.json)" >> $GITHUB_OUTPUT

      - name: Pack NuGet package
        run: |
             dotnet restore
             dotnet pack src/K.EntityFrameworkCore/K.EntityFrameworkCore.csproj -c Release -p:Version=${{ steps.get_version.outputs.version }} --no-restore

      - name: Find and push NuGet package
        run: |
          # Find the .nupkg file
          PACKAGE_FILE=$(find src/K.EntityFrameworkCore/bin/Release -name '*.nupkg')
          
          # Check if the file exists
          if [ -z "$PACKAGE_FILE" ]; then
            echo "No .nupkg file found!"
            exit 1
          fi
      
          echo "Found package: $PACKAGE_FILE"
          
          # Push the package
          dotnet nuget push "$PACKAGE_FILE" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
